function [revenue, consumption, hhdemand] = computeDemand(hhmatrix, demandFunc, pxstructure)

if isodd(numel(pxstructure))
    error('Price structure needs an even number of elements')
end

numBlks = numel(pxstructure)/2;
upperLimits = pxstructure(1:numBlks);
priceVector = pxstructure(numBlks+1:end);

numhh = size(hhmatrix,1);

incAdjustment = 0;
for i=2:numBlks
    incAdjustment(i) = (priceVector(i) - priceVector(i-1))*upperLimit(i-1) + incAdjustment(i-1);
end

% calculate adjusted income
d1 = 0;
d2 = 0.001 * (p2-p1) * x1;
d3 = d2 + (0.001 * (p3-p2) * x2);
y1 = hhmatrix(1:numhh,3) + d1;
y2 = hhmatrix(1:numhh,3) + d2;
y3 = hhmatrix(1:numhh,3) + d3;
adjIncome = [y1 y2 y3];

% calculate conditional demand
priceFactor = pxstructure(2,1:3).^demandFunc.price; %make row vector into matrix?
hhFactors = hhMatrix*demandFunc.coeff; %how to take power?
cond_demand = repmat(priceFactor,numhh,1)+repmat(hhFactors,1,numBlks)+ adjIncome*demandFunc.income;

%6 add outputs from each block to get total household demand

%7 sum to obtain consumption

%8 multiply qty demanded in each block by appropriate MP

%9 sum to get expenditure per household

%10 sum to get total expenditure

hhdemand = 6;
revenue = 10;
consumption = 7;
end